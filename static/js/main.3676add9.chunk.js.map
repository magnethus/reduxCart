{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/cart-slice.js","store/ui-slice.js","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","index.js"],"names":["module","exports","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","title","removeItemFromCart","filter","cartActions","actions","uiSlice","cartIsVisible","notification","toggle","showNotification","status","message","uiActions","store","configureStore","reducer","ui","cart","Card","props","className","classes","card","children","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","map","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","showCart","useEffect","fetchData","fetch","response","ok","Error","json","data","cartData","sendRequest","method","body","JSON","stringify","sendCartData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3676add9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__2BZwA\",\"details\":\"CartItem_details__1bPMS\",\"quantity\":\"CartItem_quantity__3KYe6\",\"price\":\"CartItem_price__2gHI7\",\"itemprice\":\"CartItem_itemprice__1YFad\",\"actions\":\"CartItem_actions__mnobq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__2BvbY\",\"price\":\"ProductItem_price__1YGVV\",\"actions\":\"ProductItem_actions__2O3Bx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__JxS7n\",\"error\":\"Notification_error__5sgJ_\",\"success\":\"Notification_success__OlmhQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__35y48\",\"badge\":\"CartButton_badge__1jD9u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3liCT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__1tDD6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__3hgt4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__dMnFx\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    changed: false,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      state.changed = true;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState: { cartIsVisible: false, notification: null },\r\n  reducers: {\r\n    toggle(state) {\r\n      state.cartIsVisible = !state.cartIsVisible;\r\n    },\r\n    showNotification(state, action) {\r\n      state.notification = {\r\n        status: action.payload.status,\r\n        title: action.payload.title,\r\n        message: action.payload.message,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport cartSlice from \"./cart-slice\";\r\n\r\nimport uiSlice from './ui-slice';\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer }\r\n});\r\n\r\nexport default store;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { useDispatch } from \"react-redux\";\n\nimport classes from \"./CartItem.module.css\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n\n  const { title, quantity, total, price, id } = props.item;\n\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n\n  const addItemHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from \"react-redux\";\n\nimport Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => (\n          <CartItem\n            key={item.id}\n            item={{\n              id: item.id,\n              title: item.name,\n              quantity: item.quantity,\n              total: item.totalPrice,\n              price: item.price,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { uiActions } from '../../store/ui-slice';\nimport classes from './CartButton.module.css';\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n  const cartQuantity = useSelector(state => state.cart.totalQuantity);\n\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle());\n  };\n\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n\n  const { title, price, description, id } = props;\n\n  const addToCartHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: \"p1\",\n    price: 6,\n    title: \"My First Book\",\n    description: \"The first book I ever wrote\",\n  },\n  {\n    id: \"p2\",\n    price: 5,\n    title: \"My Second Book\",\n    description: \"The second book I ever wrote\",\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((product) => (\n          <ProductItem\n            key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = '';\r\n\r\n  if (props.status === 'error') {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === 'success') {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\"; \nimport Notification from \"./components/UI/Notification\";\nimport { fecthCartData, sendCartData } from './store/cart-actions';\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(fecthCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n \n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { uiActions } from \"./ui-slice\";\r\nimport { cartActions } from \"./cart-slice\";\r\n\r\nexport const fecthCartData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://react-http-5b8c0-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not fetch cart data!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const cartData = await fetchData();\r\n      dispatch(\r\n        cartActions.replaceCart({\r\n          items: cartData.items || [],\r\n          totalQuantity: cartData.totalQuantity,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Fetching cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending...\",\r\n        message: \"Sending cart data!\",\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://react-http-5b8c0-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            items: cart.items,\r\n            totalQuantity: cart.totalQuantity,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Sending cart data failed.\");\r\n      }\r\n    };\r\n\r\n    try {\r\n      await sendRequest();\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Success!\",\r\n          message: \"Sending cart data successfully!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Sending cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store/index\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}